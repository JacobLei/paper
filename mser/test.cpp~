#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/features2d/features2d.hpp>
#include <iostream>
#include <string>
#include <vector>

using namespace cv;
using namespace std;

int main (int argc, char **argv)
{
    Mat image, grayImage;
    string picName = "./srcPic/LenaRGB.bmp";
    image = imread(picName, CV_LOAD_IMAGE_COLOR );
    if (!image.data) {
        cout << "No image data\n";
        return -1;
    }  
    cvtColor(image, grayImage, CV_RGB2GRAY);	// 灰度化处理
    
 //   MSER ms(5, 0.0005, 1440);					// 这几个参数的含义还需要弄清楚
 	// 创建MSER类
 	MSER ms;
    vector<vector<Point> > regions;				// 用于组快区域的像素点集
 	ms(grayImage, regions, Mat());				// 计算MSER区域
	 
	for (int i = 0; i < regions.size(); i++) 	// 在原图上用椭圆绘制组块（也可以在灰度图上绘制）
		ellipse(image, fitEllipse(regions[i]), Scalar(255));

//    namedWindow("image", CV_WINDOW_AUTOSIZE);
//    namedWindow("image gray", CV_WINDOW_AUTOSIZE);

    imshow("image", image);
//    imshow("image gray", image_gray);

    waitKey(0);
    imwrite("./resPic/res.bmp", image_gray);
    return 0;
}
